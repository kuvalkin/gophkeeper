// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kuvalkin/gophkeeper/internal/client/service/auth (interfaces: Repository)
//
// Generated by this command:
//
//	mockgen -destination=./repository_mock_test.go -package=auth_test github.com/kuvalkin/gophkeeper/internal/client/service/auth Repository
//

// Package auth_test is a generated GoMock package.
package auth_test

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
	isgomock struct{}
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// DeleteToken mocks base method.
func (m *MockRepository) DeleteToken(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteToken", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteToken indicates an expected call of DeleteToken.
func (mr *MockRepositoryMockRecorder) DeleteToken(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteToken", reflect.TypeOf((*MockRepository)(nil).DeleteToken), ctx)
}

// GetToken mocks base method.
func (m *MockRepository) GetToken(ctx context.Context) (string, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToken", ctx)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetToken indicates an expected call of GetToken.
func (mr *MockRepositoryMockRecorder) GetToken(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToken", reflect.TypeOf((*MockRepository)(nil).GetToken), ctx)
}

// SetToken mocks base method.
func (m *MockRepository) SetToken(ctx context.Context, token string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetToken", ctx, token)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetToken indicates an expected call of SetToken.
func (mr *MockRepositoryMockRecorder) SetToken(ctx, token any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetToken", reflect.TypeOf((*MockRepository)(nil).SetToken), ctx, token)
}
