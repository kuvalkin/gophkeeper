// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kuvalkin/gophkeeper/internal/client/service/secret (interfaces: Repository)
//
// Generated by this command:
//
//	mockgen -destination=./secret_repository_mock.go -package=mocks -mock_names Repository=MockSecretRepository github.com/kuvalkin/gophkeeper/internal/client/service/secret Repository
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockSecretRepository is a mock of Repository interface.
type MockSecretRepository struct {
	ctrl     *gomock.Controller
	recorder *MockSecretRepositoryMockRecorder
	isgomock struct{}
}

// MockSecretRepositoryMockRecorder is the mock recorder for MockSecretRepository.
type MockSecretRepositoryMockRecorder struct {
	mock *MockSecretRepository
}

// NewMockSecretRepository creates a new mock instance.
func NewMockSecretRepository(ctrl *gomock.Controller) *MockSecretRepository {
	mock := &MockSecretRepository{ctrl: ctrl}
	mock.recorder = &MockSecretRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretRepository) EXPECT() *MockSecretRepositoryMockRecorder {
	return m.recorder
}

// GetSecret mocks base method.
func (m *MockSecretRepository) GetSecret(ctx context.Context) (string, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecret", ctx)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetSecret indicates an expected call of GetSecret.
func (mr *MockSecretRepositoryMockRecorder) GetSecret(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecret", reflect.TypeOf((*MockSecretRepository)(nil).GetSecret), ctx)
}

// SetSecret mocks base method.
func (m *MockSecretRepository) SetSecret(ctx context.Context, secret string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetSecret", ctx, secret)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetSecret indicates an expected call of SetSecret.
func (mr *MockSecretRepositoryMockRecorder) SetSecret(ctx, secret any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSecret", reflect.TypeOf((*MockSecretRepository)(nil).SetSecret), ctx, secret)
}
