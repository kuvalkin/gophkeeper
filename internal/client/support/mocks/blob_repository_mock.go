// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kuvalkin/gophkeeper/internal/storage/blob (interfaces: Repository)
//
// Generated by this command:
//
//	mockgen -destination=./blob_repository_mock.go -package=mocks -mock_names Repository=MockBlobRepository github.com/kuvalkin/gophkeeper/internal/storage/blob Repository
//

// Package mocks is a generated GoMock package.
package mocks

import (
	io "io"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockBlobRepository is a mock of Repository interface.
type MockBlobRepository struct {
	ctrl     *gomock.Controller
	recorder *MockBlobRepositoryMockRecorder
	isgomock struct{}
}

// MockBlobRepositoryMockRecorder is the mock recorder for MockBlobRepository.
type MockBlobRepositoryMockRecorder struct {
	mock *MockBlobRepository
}

// NewMockBlobRepository creates a new mock instance.
func NewMockBlobRepository(ctrl *gomock.Controller) *MockBlobRepository {
	mock := &MockBlobRepository{ctrl: ctrl}
	mock.recorder = &MockBlobRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBlobRepository) EXPECT() *MockBlobRepositoryMockRecorder {
	return m.recorder
}

// DeleteBlob mocks base method.
func (m *MockBlobRepository) DeleteBlob(key string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteBlob", key)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteBlob indicates an expected call of DeleteBlob.
func (mr *MockBlobRepositoryMockRecorder) DeleteBlob(key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBlob", reflect.TypeOf((*MockBlobRepository)(nil).DeleteBlob), key)
}

// OpenBlobReader mocks base method.
func (m *MockBlobRepository) OpenBlobReader(key string) (io.ReadCloser, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OpenBlobReader", key)
	ret0, _ := ret[0].(io.ReadCloser)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// OpenBlobReader indicates an expected call of OpenBlobReader.
func (mr *MockBlobRepositoryMockRecorder) OpenBlobReader(key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OpenBlobReader", reflect.TypeOf((*MockBlobRepository)(nil).OpenBlobReader), key)
}

// OpenBlobWriter mocks base method.
func (m *MockBlobRepository) OpenBlobWriter(key string) (io.WriteCloser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OpenBlobWriter", key)
	ret0, _ := ret[0].(io.WriteCloser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OpenBlobWriter indicates an expected call of OpenBlobWriter.
func (mr *MockBlobRepositoryMockRecorder) OpenBlobWriter(key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OpenBlobWriter", reflect.TypeOf((*MockBlobRepository)(nil).OpenBlobWriter), key)
}
